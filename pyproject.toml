[tool.poetry]
name = "tesk"
version = "0.1.0"
description = "An implementation of a task execution engine based on the GA4GH Task Execution Service (TES) API standard running on Kubernetes."
authors = ["Elixir Cloud AAI <cloud-service@elixir-europe.org>"]
maintainers = ["Elixir Cloud AAI <cloud-service@elixir-europe.org>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/elixir-cloud-aai/TESK"
keywords = ["TES", "Kubernetes", "Task Execution", "ebi", "TESK", "workflow", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.scripts]
filer = 'tesk.services.filer:main'
taskmaster = 'tesk.services.taskmaster:main'
api = 'tesk.api.app:main'

[tool.poetry.dependencies]
python = "^3.11"
kubernetes = "^29.0.0"
requests = ">=2.20.0"
urllib3 = "^2.2.1"
boto3 = "1.34.104"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pyfakefs = "*"
pytest-mock = "*"
fs = "*"
moto = "*"
pytest-localftpserver = "*"
ruff = "^0.4.4"
mypy = "^1.10.0"
typos = "^1.21.0"
bandit = "^1.7.8"
safety = "^3.2.0"
pytest-cov = "^5.0.0"
sphinx = "^7.3.7"
tomli = "^2.0.1"
added-value = "^0.24.0"
sphinx-autodoc-typehints = "^2.1.0"
m2r2 = "^0.3.3.post2"
docutils = "0.20.1"
furo = "^2024.5.6"

[tool.poetry.group.lint.dependencies]
ruff = "^0.4.4"
typos = "^1.21.0"

[tool.poetry.group.types.dependencies]
mypy = "^1.10.0"
kubernetes-stubs = "^22.6.0.post1"
types-urllib3 = "^1.26.25.14"
types-botocore = "^1.0.2"
boto3-stubs = "^1.34.108"
types-requests = "^2.31.0.20240406"

[tool.poetry.group.security.dependencies]
bandit = "^1.7.8"
safety = "^3.2.0"

[tool.poetry.group.test.dependencies]
pytest = "*"
pyfakefs = "*"
pytest-mock = "*"
fs = "*"
moto = "*"
pytest-localftpserver = "*"
kubernetes = "*"
pytest-cov = "^5.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.3.7"
tomli = "^2.0.1"
added-value = "^0.24.0"
sphinx-autodoc-typehints = "^2.1.0"
m2r2 = "^0.3.3.post2"
docutils = "0.20.1"
furo = "^2024.5.6"

[tool.ruff.lint]
select = [
    "E",        # pycodestyle
    "F",        # Pyflakes
    "UP",       # pyupgrade
    "B",        # flake8-bugbear
    "SIM",      # flake8-simplify
    "I",        # isort
    "PL"        # pylint
]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true

[tool.typos.default.extend-words]
mke = 'mke'

[tool.pytest_env]
FTP_USER="user"
FTP_PASS="pass"
TESK_FTP_USERNAME="user"
TESK_FTP_PASSWORD="pass"
FTP_HOME ="/tmp"
FTP_FIXTURE_SCOPE="function"
FTP_PORT = 2111

[tool.bandit]
skips = [
    "B321", # FTP-related functions are being called.
    "B402", # A FTP-related module is being imported.
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
